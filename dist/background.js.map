{"version":3,"file":"background.js","mappings":";;;;;;;;;;AAAa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,mBAAO,CAAC,mCAAS;AACjC,gBAAgB,mBAAO,CAAC,mCAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,uCAAuC,cAAc;AACrD,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA,0BAA0B,mBAAmB;AAC7C;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA,iDAAiD,SAAS;AAC1D;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA,oCAAoC,sBAAsB;AAC1D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;;;;;;;;;;AC9Fa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,aAAa,cAAc,cAAc;;;;;;;;;;;ACX7B;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,GAAG,mBAAmB,GAAG,yCAAyC;AACvF,gBAAgB,mBAAO,CAAC,mCAAS;AACjC,qCAAqC,mBAAO,CAAC,yEAAkC;AAC/E,uCAAuC,mBAAO,CAAC,6EAAoC;AACnF,qCAAqC,mBAAO,CAAC,yEAAkC;AAC/E;AACA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,aAAa;AACb;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA,qBAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCpGrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://take-a-break/./scripts/background.ts","webpack://take-a-break/./scripts/types.ts","webpack://take-a-break/./scripts/utils.ts","webpack://take-a-break/webpack/bootstrap","webpack://take-a-break/webpack/before-startup","webpack://take-a-break/webpack/startup","webpack://take-a-break/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"./types\");\nconst utils_1 = require(\"./utils\");\nconst alarmsFired = new Set();\nchrome.runtime.onInstalled.addListener(() => {\n    chrome.storage.local.set({\n        timeout: 20,\n        water: 120,\n        walk: 40,\n        showNotifications: true,\n    });\n    createOrUpdateAlarms();\n});\nchrome.runtime.onStartup.addListener(() => {\n    createOrUpdateAlarms();\n});\nchrome.runtime.onMessage.addListener((message) => {\n    if (typeof message === \"object\") {\n        Object.entries(message).forEach(([key, value]) => {\n            chrome.storage.local.set({ [key]: value });\n        });\n        createOrUpdateAlarms();\n    }\n});\n//Listen for the alarm to fire\nchrome.alarms.onAlarm.addListener((alarm) => {\n    console.log(\"Fired\", alarm.name);\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => __awaiter(void 0, void 0, void 0, function* () {\n        //Execute content script when the alarm fires\n        if (tabs.length > 0) {\n            chrome.storage.local.set({ [alarm.name]: true });\n            alarmsFired.add(alarm.name);\n            pushNotificationIfNotDuplicate(alarm.name);\n            chrome.scripting.executeScript({\n                target: { tabId: tabs[0].id },\n                files: [\"dist/content.js\"],\n            });\n        }\n    }));\n    //   }\n});\nfunction pushNotificationIfNotDuplicate(alarmName) {\n    if (alarmsFired.size <= 1) {\n        chrome.storage.local.get([types_1.Alarms.ScreenBreak, types_1.Alarms.Water, types_1.Alarms.Walk, \"showNotifications\"], (items) => {\n            const taskName = (0, utils_1.getTaskName)(items);\n            const { message } = (0, utils_1.getMessageAndIntervalAndAnimation)(taskName);\n            if (items.showNotifications) {\n                chrome.notifications.create({\n                    type: \"basic\",\n                    iconUrl: `../assets/images/${taskName}.png`,\n                    title: \"Take a break\",\n                    message: message,\n                });\n            }\n        });\n    }\n    else {\n        alarmsFired.delete(alarmName);\n    }\n}\nfunction createOrUpdateAlarms() {\n    chrome.storage.local.get([\"timeout\", \"water\", \"walk\"], (items) => {\n        const { timeout, water, walk } = items;\n        chrome.alarms.clearAll();\n        // updateTimeoutWeightage({ timeout, water, walk });\n        if (timeout) {\n            chrome.alarms.create(types_1.Alarms.ScreenBreak, {\n                delayInMinutes: timeout,\n                periodInMinutes: timeout,\n            });\n        }\n        if (water) {\n            chrome.alarms.create(types_1.Alarms.Water, {\n                delayInMinutes: water,\n                periodInMinutes: water,\n            });\n        }\n        if (walk) {\n            chrome.alarms.create(types_1.Alarms.Walk, {\n                delayInMinutes: walk,\n                periodInMinutes: walk,\n            });\n        }\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Alarms = void 0;\nvar Alarms;\n(function (Alarms) {\n    Alarms[\"Water\"] = \"WATER\";\n    Alarms[\"Walk\"] = \"WALK\";\n    Alarms[\"ScreenBreak\"] = \"SCREEN_BREAK\";\n    Alarms[\"WalkAndWater\"] = \"WALK_WATER\";\n    Alarms[\"BreakAndWater\"] = \"BREAK_WATER\";\n    Alarms[\"BreakAndWaterAndWalk\"] = \"BREAK_WATER_WALK\";\n})(Alarms || (exports.Alarms = Alarms = {}));\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateInput = exports.getTaskName = exports.getMessageAndIntervalAndAnimation = void 0;\nconst types_1 = require(\"./types\");\nconst water_json_1 = __importDefault(require(\"../assets/lottiefiles/water.json\"));\nconst stretch_json_1 = __importDefault(require(\"../assets/lottiefiles/stretch.json\"));\nconst break_json_1 = __importDefault(require(\"../assets/lottiefiles/break.json\"));\nconst map = new Map();\nchrome.storage.local.get([\"timeout\", \"water\", \"walk\"], (items) => {\n    var _a, _b, _c;\n    const { timeout, water, walk } = items;\n    const weightageToAnimation = {\n        [timeout]: types_1.Alarms.ScreenBreak,\n        [water]: types_1.Alarms.Water,\n        [walk]: types_1.Alarms.Walk,\n    };\n    map.set(types_1.Alarms.ScreenBreak, {\n        message: \"Look at Something 20 Feet Away For 20 Seconds\",\n        breaktime: 20000,\n        animation: break_json_1.default,\n        weightage: timeout,\n    });\n    map.set(types_1.Alarms.Water, {\n        message: \"Drink A Glass Of Water\",\n        breaktime: 60000,\n        animation: water_json_1.default,\n        weightage: water,\n    });\n    map.set(types_1.Alarms.Walk, {\n        message: \"Stretch, Walk and Recharge!\",\n        breaktime: 120000,\n        animation: stretch_json_1.default,\n        weightage: walk,\n    });\n    map.set(types_1.Alarms.WalkAndWater, {\n        message: \"Stretch, Walk and Drink Water!\",\n        breaktime: 180000,\n        animation: (_a = map.get(weightageToAnimation[Math.max(walk, water)])) === null || _a === void 0 ? void 0 : _a.animation,\n        weightage: 0,\n    });\n    map.set(types_1.Alarms.BreakAndWater, {\n        message: \"Drink a Glass of Water and Look Away from the Screen\",\n        breaktime: 80000,\n        animation: (_b = map.get(weightageToAnimation[Math.max(timeout, water)])) === null || _b === void 0 ? void 0 : _b.animation,\n        weightage: 0,\n    });\n    map.set(types_1.Alarms.BreakAndWaterAndWalk, {\n        message: \"Time to drink a Glass of Water, Look Away from the Screen and, take a Short Walk\",\n        breaktime: 200000,\n        animation: (_c = map.get(weightageToAnimation[Math.max(timeout, walk, water)])) === null || _c === void 0 ? void 0 : _c.animation,\n        weightage: 0,\n    });\n});\n// export const updateTimeoutWeightage = ({\n//   timeout,\n//   water,\n//   walk,\n// }: {\n//   timeout: number;\n//   water: number;\n//   walk: number;\n// }) => {};\nfunction getMessageAndIntervalAndAnimation(alarmName) {\n    if (map.has(alarmName)) {\n        return (map.get(alarmName) || {\n            message: \"\",\n            breaktime: 0,\n            animation: undefined,\n            weightage: 0,\n        });\n    }\n    return { message: \"\", breaktime: 0, animation: undefined, weightage: 0 };\n}\nexports.getMessageAndIntervalAndAnimation = getMessageAndIntervalAndAnimation;\nfunction getTaskName(items) {\n    const alarms = Object.keys(items);\n    alarms.includes(\"showNotifications\") &&\n        alarms.splice(alarms.indexOf(\"showNotifications\"), 1);\n    if (alarms.length === 3) {\n        return types_1.Alarms.BreakAndWaterAndWalk;\n    }\n    else if (alarms.length === 2) {\n        return items[types_1.Alarms.ScreenBreak] && items[types_1.Alarms.Water]\n            ? types_1.Alarms.BreakAndWater\n            : types_1.Alarms.WalkAndWater;\n    }\n    else {\n        return alarms[0];\n    }\n}\nexports.getTaskName = getTaskName;\nconst validateInput = ({ timeout, water, walk, }) => {\n    if (timeout < 10 || water < 45 || walk < 30) {\n        throw new Error(\"Break intervals cannot be less than the minimum specified values.\");\n    }\n    return true;\n};\nexports.validateInput = validateInput;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./scripts/background.ts\");\n",""],"names":[],"sourceRoot":""}