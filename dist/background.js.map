{"version":3,"file":"background.js","mappings":";;;;;;;;;;AAAa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA,uCAAuC,cAAc;AACrD,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,wBAAwB,mCAAmC;AAC3D,kDAAkD,sBAAsB;AACxE;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA,0BAA0B,mBAAmB;AAC7C;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;;;;;;;UE7DA;UACA;UACA;UACA;UACA","sources":["webpack://take-a-break/./scripts/background.ts","webpack://take-a-break/webpack/before-startup","webpack://take-a-break/webpack/startup","webpack://take-a-break/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (typeof message === \"object\") {\n        Object.entries(message).forEach(([key, value]) => {\n            chrome.storage.local.set({ [key]: value });\n        });\n        createOrUpdateAlarms();\n    }\n});\n//Listen for the alarm to fire\nchrome.alarms.onAlarm.addListener((alarm) => {\n    console.log(\"Fired\", alarm.name);\n    //   if (alarm.name === \"breakAlarm\") {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => __awaiter(void 0, void 0, void 0, function* () {\n        // chrome.tabs.sendMessage(tabs[0].id!, { message: \"breakTime\" });\n        //Execute content script when the alarm fires\n        if (tabs.length > 0) {\n            console.count(\"Script executed\");\n            chrome.storage.local.set({ [alarm.name]: true });\n            chrome.scripting.executeScript({\n                target: { tabId: tabs[0].id },\n                files: [\"dist/content.js\"],\n            });\n        }\n    }));\n    //   }\n});\nfunction createOrUpdateAlarms() {\n    chrome.storage.local.get([\"timeout\", \"water\", \"walk\"], (items) => {\n        const { timeout, water, walk } = items;\n        console.log(timeout, water, walk);\n        chrome.alarms.clearAll();\n        if (timeout) {\n            chrome.alarms.create(\"breakAlarm\", {\n                delayInMinutes: timeout,\n                periodInMinutes: timeout,\n            });\n        }\n        if (water) {\n            chrome.alarms.create(\"waterAlarm\", {\n                delayInMinutes: water,\n                periodInMinutes: water,\n            });\n        }\n        if (walk) {\n            chrome.alarms.create(\"walkAlarm\", {\n                delayInMinutes: walk,\n                periodInMinutes: walk,\n            });\n        }\n    });\n}\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./scripts/background.ts\"](0, __webpack_exports__);\n",""],"names":[],"sourceRoot":""}